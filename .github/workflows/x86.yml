name: Build and Release Windows Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86, x64, arm]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x' # 根据你的需求调整版本

      - name: Restore dependencies
        run: dotnet restore ./工具箱.sln
        continue-on-error: false # 确保失败时停止

      - name: Build
        run: dotnet build ./工具箱.sln --configuration Release --runtime ${{ matrix.arch }}
        continue-on-error: false # 确保失败时停止

      - name: Publish
        run: dotnet publish ./工具箱.sln --configuration Release --runtime ${{ matrix.arch }} --self-contained true --output ./output/${{ matrix.arch }}
        continue-on-error: false # 确保失败时停止

      - name: Check if publish output exists
        run: |
          if [ ! -d "./output/${{ matrix.arch }}" ]; then
            echo "Publish output for ${{ matrix.arch }} not found!"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.arch }}-output
          path: ./output/${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ github.run_number }} # 或者使用其他 tag 格式
          files: |
            ./output/x64/*.exe
            ./output/x86/*.exe
            ./output/arm/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
